如果注册动态广播时，使用一下方法：
public Intent registerReceiver(
        BroadcastReceiver receiver, IntentFilter filter,
        String broadcastPermission, Handler scheduler)；
那么onReceive是在指定的Handler上面执行的，也就避免了在主线程上执行太多任务。
但是有两种可能：1、消息从系统服务直接发给此Handler线程  2、广播消息统一由主线程接收，再由主线程派发给指定Handler。
如果是第二种情况，那么我们指定Handler也就没太多意义了。
实验一下：
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        BroadcastReceiver receiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                String action = intent.getAction();
                if (action.equals(Intent.ACTION_TIME_TICK)) {
                    System.out.println("ACTION_TIME_TICK");
                }
            }
        };
        HandlerThread workThread = new HandlerThread(TAG
                + "{" + Integer.toHexString(System.identityHashCode(this)) + "}",
                android.os.Process.THREAD_PRIORITY_BACKGROUND);
        workThread.start();
        Handler mWorkHandler = new Handler(workThread.getLooper());
        IntentFilter filter = new IntentFilter();
        filter.addAction(Intent.ACTION_TIME_TICK);
        registerReceiver(receiver, filter,null,mWorkHandler);

        SystemClock.sleep(2 *60* 1000);//把主线程卡住两分钟
        System.out.println("endd");

    }
我把主线程卡住了，然后System.out.println("ACTION_TIME_TICK");仍然能准时打印，可见不会经过主线程。