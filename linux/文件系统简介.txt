rootfs: 根文件系统
    1. rootfs是一个特定的ramfs(或tmpfs，如果那被启用)的实例，它始终存在于2.6的系统。不能卸载rootfs就如同你不能杀死init进程。
    2. 是内核启动时所mount的第一个文件系统，内核代码映像文件保存在根文件系统中，而系统引导启动程序会在根文件系统挂载之后从中把一些基本的初始化脚本和服务等加载到内存中去运行。
    3. init进程的应用程序必须运行在根文件系统上; shell命令程序必须运行在根文件系统上，譬如ls、cd等命令。
    4. 根文件系统至少包括以下目录，缺一不可：
        4.1 /etc/：存储重要的配置文件。
        4.2 /bin/：存储常用且开机时必须用到的执行文件。
        4.3 /sbin/：存储着开机过程中所需的系统执行文件。
        4.4 /lib/：存储/bin/及/sbin/的执行文件所需的链接库，以及Linux的内核模块。
        4.5 /dev/：存储设备文件。
    
sysfs: Linux 2.6所提供的一种基于内存的虚拟文件系统,将内核信息以文件方式提供给用户使用。不仅可以把设备（devices）和驱动程序（drivers）的信息从内核输出到用户空间，也可以用来对设备和驱动程序做设置。
    1. sysfs可以看成与proc,devfs和devpty同类别的文件系统。把连接在系统上的设备和总线组织成为一个分级的文件，与提供进程和状态信息的proc文件系统十分类似。
    2. sysfs 文件系统总是被内核的init程序挂载在rootfs的 /sys 挂载点上，参考kernel源码init/main.c

/proc: 一个虚拟文件系统,最初是为了提供有关系统中进程的信息,后来内核中的很多元素也加进来。或启用动态运行时配置。
    /proc/apm 高级电源管理(APM)版本信息及电池相关状态信息，通常由apm命令使用； 
    /proc/buddyinfo 用于诊断内存碎片问题的相关信息文件；
    /proc/cmdline 在启动内核时传递至内核的相关参数信息，这些信息通常由lilo或grub等启动管理工具进行传递
    /proc/cpuinfo 处理器的相关信息的文件； 
    /proc/crypto 系统上已安装的内核使用的密码算法及每个算法的详细信息列表；
    /proc/devices 系统已经加载的所有块设备和字符设备的信息，包含主设备号和设备组(与主设备号对应的设备类型)名；
    /proc/dma 每个正在使用且注册的ISA DMA通道的信息列表；
    /proc/fb 帧缓冲设备列表文件，包含帧缓冲设备的设备号和相关驱动信息； 
    /proc/filesystems 当前被内核支持的文件系统类型列表文件，被标示为nodev的文件系统表示不需要块设备的支持；通常mount一个设备时，如果没有指定文件系统类型将通过此文件来决定其所需文件系统的类型； 
    /proc/interrupts ARM体系架构系统上每个IRQ相关的中断号列表；
    /proc/iomem 每个物理设备上的记忆体(RAM或者ROM)在系统内存中的映射信息； 
    /proc/kmsg 此文件用来保存由内核输出的信息，通常由/sbin/klogd或/bin/dmsg等程序使用，不要试图使用查看命令打开此文件； 
    /proc/meminfo 系统中关于当前内存的利用状况等的信息，常由free命令使用
    /proc/modules 当前装入内核的所有模块名称列表，可以由lsmod命令使用，也可以直接查看
    /proc/partitions 块设备每个分区的主设备号(major)和次设备号(minor)等信息，同时包括每个分区所包含的块(block)数目
    /proc/slabinfo 在内核中频繁使用的对象(如inode、dentry等)都有自己的cache，即slab pool，而/proc/slabinfo文件列出了这些对象相关slap的信息；详情可以参见内核文档中slapinfo的手册页； 
    /proc/uptime 系统上次启动以来的运行时间，如下所示，其第一个数字表示系统运行时间，第二个数字表示系统空闲时间，单位是秒；
    /proc/version 当前系统运行的内核版本号，如下所示；
    /proc/zoneinfo 内存区域(zone)的详细信息列表，信息量较大；
    
    要在/proc文件系统中创建一个虚拟文件，请使用proc_create()或proc_create_data()函数.
    
    
devtmpfs: 文件系统创建设备节点。 2009年devtmpfs出现之前，/dev/下面的设备节点应该都是udev-daemon收到内核的事件后用mknod程序或者直接调mknod()系统调用创建出来的。

ramdisk: 旧的"内存磁盘"机制。在一个内存空间中创建一个合成块设备，从而将内存中的的一块区域作为物理磁盘来使用，这个块设备是固定大小的以至于挂载在它上面的文件系统也是固定大小的。需要一个文件系统驱动 (如，ext2)来格式和解释这些数据。

ramfs： 与Ramdisk相比，不需经过格式化，用起来灵活，其大小随所需要的空间而增加或减少。不像ramdisk那样基于虚拟在内存中的其他文件系统(ex2fs)。没有回写地址。可以创建多个。

tmpfs: 为了解决ramfs的缺点衍生出的文件系统，添加了大小的限制以及回写数据到交换空间能力

initramfs： initramfs存档是2.6 Linux内核包含了的一个gzip压缩过的"cpio"格式存档。旧的initrd通常是一个独立的文件，而initramfs存档是连接到linux内核映像的。

devpts： 远程虚拟终端文件设备,文件夹里面一般是一些字符设备文件


使用mount命令查看上述文件系统的挂载信息。
